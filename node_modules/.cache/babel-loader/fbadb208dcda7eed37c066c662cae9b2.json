{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonat\\\\OneDrive\\\\Desktop\\\\monsters-rolodex\\\\src\\\\App.js\";\nimport { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      //UI in search. Var is in state so we can use it outside of return\n      searchField: ''\n    };\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState(() => {\n      return {\n        monsters: users\n      };\n    }));\n  }\n\n  render() {\n    // Keeps original array (monsters) untouched and returns an array w/ filter results as user inputs into search\n    const filterMonsters = this.state.monsters.filter(monster => {\n      // monster data being searched is changed to all lower case\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search-box\",\n        type: \"search\",\n        placeholder: \"search monsters\",\n        onChange: event => {\n          const searchField = event.target.value.toLocaleLowerCase();\n          this.setState(() => {\n            // update what data is in searchField.\n            return {\n              searchField\n            };\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), filterMonsters.map(monster => {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: monster.name\n        }, monster.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 20\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"names":["Component","logo","App","constructor","state","monsters","searchField","console","log","componentDidMount","fetch","then","response","json","users","setState","render","filterMonsters","filter","monster","name","toLocaleLowerCase","includes","event","target","value","map","id"],"sources":["C:/Users/Jonat/OneDrive/Desktop/monsters-rolodex/src/App.js"],"sourcesContent":["import {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],  \n      //UI in search. Var is in state so we can use it outside of return\n      searchField: '',    \n    };\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState(() => {\n        return {monsters: users}\n      }\n      ));\n  }\n\n  render() {\n    // Keeps original array (monsters) untouched and returns an array w/ filter results as user inputs into search\n    const filterMonsters = this.state.monsters.filter((monster) => {\n      // monster data being searched is changed to all lower case\n      return monster.name.toLocaleLowerCase().includes(this.state.searchField);\n    });\n    return (\n      <div className=\"App\">\n        <input className='search-box' type='search' placeholder='search monsters' onChange={(event) => {\n          const searchField= event.target.value.toLocaleLowerCase();\n          this.setState(() => {\n            // update what data is in searchField.\n            return {searchField};\n          }); \n        }}\n      />\n        {filterMonsters.map((monster) => {\n            return <h1 key={monster.id}>{monster.name}</h1>;\n          })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;EAC1BG,WAAW,GAAG;IACZ;IAEA,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAE,EADC;MAEX;MACAC,WAAW,EAAE;IAHF,CAAb;IAKAC,OAAO,CAACC,GAAR,CAAY,aAAZ;EACD;;EAEDC,iBAAiB,GAAG;IAClBF,OAAO,CAACC,GAAR,CAAY,mBAAZ;IACAE,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,KAAD,IAAW,KAAKC,QAAL,CAAc,MAAM;MACnC,OAAO;QAACV,QAAQ,EAAES;MAAX,CAAP;IACD,CAFgB,CAFnB;EAMD;;EAEDE,MAAM,GAAG;IACP;IACA,MAAMC,cAAc,GAAG,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,MAApB,CAA4BC,OAAD,IAAa;MAC7D;MACA,OAAOA,OAAO,CAACC,IAAR,CAAaC,iBAAb,GAAiCC,QAAjC,CAA0C,KAAKlB,KAAL,CAAWE,WAArD,CAAP;IACD,CAHsB,CAAvB;IAIA,oBACE;MAAK,SAAS,EAAC,KAAf;MAAA,wBACE;QAAO,SAAS,EAAC,YAAjB;QAA8B,IAAI,EAAC,QAAnC;QAA4C,WAAW,EAAC,iBAAxD;QAA0E,QAAQ,EAAGiB,KAAD,IAAW;UAC7F,MAAMjB,WAAW,GAAEiB,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBJ,iBAAnB,EAAnB;UACA,KAAKN,QAAL,CAAc,MAAM;YAClB;YACA,OAAO;cAACT;YAAD,CAAP;UACD,CAHD;QAID;MAND;QAAA;QAAA;QAAA;MAAA,QADF,EASGW,cAAc,CAACS,GAAf,CAAoBP,OAAD,IAAa;QAC7B,oBAAO;UAAA,UAAsBA,OAAO,CAACC;QAA9B,GAASD,OAAO,CAACQ,EAAjB;UAAA;UAAA;UAAA;QAAA,QAAP;MACD,CAFF,CATH;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAeD;;AA3CyB;;AA8C5B,eAAezB,GAAf"},"metadata":{},"sourceType":"module"}